//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lightest.TransferTest.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lightest.TransferTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;testlib.h&quot;
        ///#include &lt;cmath&gt;
        ///
        ///using namespace std;
        ///
        ///const double EPS = 1E-9;
        ///
        ///int main(int argc, char * argv[])
        ///{
        ///    setName(&quot;compare two sequences of doubles, max absolute or relative error = %.10f&quot;, EPS);
        ///    registerTestlibCmd(argc, argv);
        ///
        ///    int n = 0;
        ///    double j = 0, p = 0;
        ///
        ///    while (!ans.seekEof()) 
        ///    {
        ///        n++;
        ///        j = ans.readDouble();
        ///        p = ouf.readDouble();
        ///        if (!doubleCompare(j, p, EPS))
        ///        {
        ///            quitf(_wa, &quot;%d%s numbers di [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DoubleSequenceChecker {
            get {
                return ResourceManager.GetString("DoubleSequenceChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;testlib.h&quot;
        ///#include &lt;sstream&gt;
        ///
        ///using namespace std;
        ///
        ///int main(int argc, char * argv[])
        ///{
        ///    setName(&quot;compare ordered sequences of signed int%d numbers&quot;, 8 * int(sizeof(long long)));
        ///
        ///    registerTestlibCmd(argc, argv);
        ///
        ///    int n = 0;
        ///    string firstElems;
        ///
        ///    while (!ans.seekEof() &amp;&amp; !ouf.seekEof())
        ///    {
        ///        n++;
        ///        long long j = ans.readLong();
        ///        long long p = ouf.readLong();
        ///        if (j != p)
        ///            quitf(_wa, &quot;%d%s numbers differ - expected: &apos;%s&apos;,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntSequenceChecker {
            get {
                return ResourceManager.GetString("IntSequenceChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;testlib.h&quot;
        ///#include &lt;string&gt;
        ///#include &lt;vector&gt;
        ///#include &lt;sstream&gt;
        ///
        ///using namespace std;
        ///
        ///int main(int argc, char * argv[])
        ///{
        ///    setName(&quot;compare files as sequence of lines&quot;);
        ///    registerTestlibCmd(argc, argv);
        ///
        ///    std::string strAnswer;
        ///
        ///    int n = 0;
        ///    while (!ans.eof()) 
        ///    {
        ///        std::string j = ans.readString();
        ///
        ///        if (j == &quot;&quot; &amp;&amp; ans.eof())
        ///          break;
        ///
        ///        strAnswer = j;
        ///        std::string p = ouf.readString();
        ///
        ///        n++;
        ///
        ///        if (j  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LineSequenceChecker {
            get {
                return ResourceManager.GetString("LineSequenceChecker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;iostream&gt;
        ///using namespace std;
        ///int main()
        ///{
        ///    long long a, b;
        ///    cin &gt;&gt; a &gt;&gt; b;
        ///    cout &lt;&lt; a + b &lt;&lt; endl;
        ///    cout &lt;&lt; b - a;
        ///    return 0;
        ///}.
        /// </summary>
        internal static string SampleUploadCode {
            get {
                return ResourceManager.GetString("SampleUploadCode", resourceCulture);
            }
        }
    }
}
